apply plugin: 'com.android.application'

android {
    compileSdkVersion rootProject.ext.android["compileSdkVersion"]
    buildToolsVersion rootProject.ext.android["buildToolsVersion"]
    defaultConfig {
        applicationId "com.junwu.mvpattempt"
        minSdkVersion rootProject.ext.android["minSdkVersion"]
        targetSdkVersion rootProject.ext.android["targetSdkVersion"]
        versionCode 170626
        versionName "1.0.2"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        debug {
            //是否是调试模式
            buildConfigField "boolean", "DebugMode", "true"
            //是否是正式包
            buildConfigField "boolean", "FormalMode", "false"
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        release {
            //是否是调试模式
            buildConfigField "boolean", "DebugMode", "false"
            //是否是正式包
            buildConfigField "boolean", "FormalMode", "true"
            minifyEnabled true
            shrinkResources true
            zipAlignEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile(rootProject.ext.dependencies["design"]) {
        exclude module: 'support-annotations'
        exclude module: 'appcompat-v7'
        exclude module: 'support-v4'
    }
    compile(rootProject.ext.dependencies["constraint-layout"]) {
        exclude module: 'support-annotations'
        exclude module: 'appcompat-v7'
        exclude module: 'support-v4'
    }

    //dagger2 tools
    provided rootProject.ext.dependencies["javax.annotation"]
    annotationProcessor rootProject.ext.dependencies["dagger2-compiler"]
    annotationProcessor rootProject.ext.dependencies["annotationProcessor"]
    rootProject.ext.dependencies["dagger2-compiler"]
    //kotlin
    compile "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"
    //mvp封装lib，导入源码
    compile project(':mvplibrary')
    //mvp封装lib，导入库 两者选一
//    compile 'com.github.pujunwu.MVPAttempt:mvplibrary:v1.0.2'

}
